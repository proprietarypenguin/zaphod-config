/*
 * Copyright (c) 2021 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 * 
 * proprietarypenguin fork 
 *
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define NAV_L 1
#define BLU_L 2
#define NUM_L 3
#define SYM_L 4
#define MED_L 5
#define FUN_L 6

/ { 
    conditional_layers {
    	compatible = "zmk,conditional-layers";
	tri_layer {
		if-layers = <1 2>;
		then-layer = <3>;
		};
    	};
};

&mt {
    tapping-term-ms = <250>;
};

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";

        combo-fn {
	    timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&mo FUN_L>;
        };

        combo-media {
	    timeout-ms = <50>;
            key-positions = <32 33>;
            bindings = <&mo MED_L>;
        };

    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
	    quick-tap-ms = <50>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
                &kp Q      &kp W      &kp E       &kp R          &kp T         &kp Y            &kp U          &kp I       &kp O      &kp P
                &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHFT F    &kp G         &kp H            &hm RSHFT J    &hm RCTRL K &hm LALT L &hm LGUI SEMI
                &kp Z      &kp X      &kp C       &kp V          &kp B         &kp N            &kp M          &kp COMMA   &kp DOT    &kp FSLH
                                                  &lt SYM_L TAB  &lt BLU_L RET &lt NUM_L SPACE  &lt NAV_L BKSP
            >;
        };

	// NAV_L, 1
        nav_layer {
            label = "Nav";
            bindings = <
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans      &trans      &trans
                &trans     &trans     &trans      &trans          &trans       &kp LARW         &kp DARW       &kp UARW    &kp RARW    &APOS
                &trans     &trans     &trans      &trans          &trans       &kp HOME         &kp END        &kp PG_UP   &kp PG_DOWN &trans
                                                  &trans          &trans       &kp ESC          &kp DEL
            >;
        };

	// BLU_L, 2
        blue_layer {
            label = "Other";
            bindings = <
                &bt BT_SEL 0 &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3 &bt BT_SEL 4	        &trans      &trans      &trans      &trans      &trans
                &bt BT_CLR   &trans     &trans      &trans          &trans       		&trans      &trans      &trans      &trans      &trans
                &trans       &trans     &trans      &trans          &trans       		&trans 	    &trans	&trans	    &trans	&trans
                                                    &trans          &trans       		&trans      &trans
            >;
        };

	// NUM_L, 3
        num_layer {
            label = "Num";
            bindings = <
                &kp N1     &kp N2     &kp N3      &kp N4          &kp N5        &kp N6          &kp N7         &kp N8      &kp N9     &kp N0
                &kp ESC    &trans     &trans      &trans          &trans        &trans          &kp MINUS      &kp EQUAL   &kp LBKT   &kp RBKT
                &kp GRAVE  &trans     &trans      &trans          &kp BSLH      &trans          &trans         &trans      &trans     &trans
                                                  &trans          &kp BKSP      &trans          &trans
            >;
        };

	// SYM_L, 4
        sym_layer {
            label = "Sym";
            bindings = <
                &kp EXCL     &kp AT  &kp HASH  &kp DLLR  &kp PRCNT       &kp CARET &kp AMPS   &kp KP_MULTIPLY    &kp LPAR    &kp RPAR
                &kp TAB    &kp F2  &trans 	&trans	&trans       &kp PIPE &kp UNDER   &kp PLUS    &kp LBRC   &kp RBRC
                &kp K_UNDO   &kp K_CUT   &kp K_COPY  &kp K_PASTE &trans         &kp GRAVE &trans   &trans    &trans    &kp BSLH
                                                     &trans      &trans         &trans &trans
            >;
        };

	// MED_L, 5
        media_layer {
            label = "Media";
            bindings = <
                &trans	   &trans     &trans      &trans          &trans       &trans         &trans        &trans       &trans    &trans
                &trans     &trans     &trans      &trans          &trans       &kp C_VOL_UP   &trans	    &trans	 &trans    &trans
                &trans     &trans     &trans      &trans          &trans       &kp C_VOL_DN   &kp C_PREV    &kp C_NEXT   &trans    &kp C_PP
                                                  &trans          &trans       &trans     &trans
            >;
        };

	// FUN_L, 6
        fun_layer {
            label = "Fun";
            bindings = <
                &kp F12     &kp F7     &kp F8      &kp F9     &kp PSCRN         &trans          &trans         &trans      &trans     &trans
                &kp F11     &kp F4     &kp F5      &kp F6     &kp SLCK          &trans          &trans         &trans      &trans     &trans
                &kp F10     &kp F1     &kp F2      &kp F3     &kp PAUSE_BREAK   &trans          &trans         &trans      &trans     &trans
                                                   &none      &none             &trans          &trans
            >;
        };
    };
};

